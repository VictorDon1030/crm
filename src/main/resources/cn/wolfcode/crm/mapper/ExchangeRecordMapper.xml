<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.crm.mapper.ExchangeRecordMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.crm.domain.ExchangeRecord">
        <id column="id" property="id"/>
        <result column="number" property="number"/>
        <result column="costPoints" property="costPoints"/>
        <result column="consumeStore" property="consumeStore"/>
        <result column="exchangeDate" property="exchangeDate"/>
        <association property="gift" javaType="gift" column="gift_id" fetchType="eager"
                     select="cn.wolfcode.crm.mapper.GiftMapper.selectByPrimaryKey"/>
        <association property="optUser" javaType="employee" column="optUser_id" fetchType="eager"
                     select="cn.wolfcode.crm.mapper.EmployeeMapper.selectByPrimaryKey"/>
        <collection property="members" ofType="member" columnPrefix="m_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
            <result column="points" property="points"/>
            <result column="memberNum" property="memberNum"/>
        </collection>
    </resultMap>
    <delete id="deleteByPrimaryKey">
        DELETE FROM exchangerecord
        WHERE id = #{id}
    </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO exchangerecord (number, costPoints, optUser_id, consumeStore, exchangeDate, gift_id
        )
        VALUES (#{number}, #{costPoints}, #{optUser.id}, #{consumeStore}, #{exchangeDate}, #{gift.id}
        )
    </insert>
    <insert id="insertRelation">
        INSERT INTO member_exechangerecord (member_id, exchangeRecord_id)
                VALUES (#{memberId},#{recordId})
    </insert>
    <update id="updateByPrimaryKey">
        UPDATE exchangerecord
        SET number       = #{number},
            costPoints   = #{costPoints},
            optUser_id   = #{optUser.id},
            consumeStore = #{consumeStore},
            exchangeDate = #{exchangeDate},
            gift_id      = #{gift.id}
        WHERE id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        SELECT
            id,
            number,
            costPoints,
            optUser_id,
            consumeStore,
            exchangeDate,
            gift_id
        FROM exchangerecord
        WHERE id = #{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            id,
            number,
            costPoints,
            optUser_id,
            consumeStore,
            exchangeDate,
            gift_id
        FROM exchangerecord
    </select>
    <select id="query4count" resultType="int">
        SELECT count(*)
        FROM exchangerecord e LEFT JOIN member_exechangerecord me ON e.id = me.exchangeRecord_id
            LEFT JOIN member m ON m.id = me.member_id
        <include refid="base_where"/>
    </select>
    <select id="query4list" resultMap="BaseResultMap">
        SELECT
            e.id,
            e.number,
            e.costPoints,
            e.optUser_id,
            e.consumeStore,
            e.exchangeDate,
            e.gift_id,
            m.id        m_id,
            m.points    m_points,
            m.name      m_name,
            m.memberNum m_memberNum
        FROM exchangerecord e LEFT JOIN member_exechangerecord me ON e.id = me.exchangeRecord_id
            LEFT JOIN member m ON m.id = me.member_id
            <include refid="base_where"/>
        LIMIT #{start}, #{rows}
    </select>
    <sql id="base_where">
        <where>
            <if test="keyword != null">
                and (m.memberNum like concat('%',#{keyword},'%') or m.name like concat('%',#{keyword},'%'))
            </if>
            <if test="beginDate != null">
                and e.exchangeDate &gt;= #{beginDate}
            </if>
            <if test="endDate != null">
                and e.exchangeDate &lt;= #{endDate}
            </if>
        </where>
    </sql>
</mapper>