<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.crm.mapper.SystemLogMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.crm.domain.SystemLog">
    <id column="id" property="id" />
    <result column="opTime" property="opTime" />
    <result column="opIp" property="opIp" />
    <result column="function" property="function" />
    <result column="params" property="params" />
    <association property="opUser" javaType="Employee" columnPrefix="e_">
      <id property="id" column="id"/>
      <result property="username" column="username"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from systemlog
    where id = #{id}
  </delete>

  <delete id="deleteAll">
    delete from systemlog
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into systemlog (opUser_id, opTime, opIp, function, params)
    values (#{opUser.id}, #{opTime}, #{opIp}, #{function}, #{params})
  </insert>
  <update id="updateByPrimaryKey">
    update systemlog
    set opUser_id = #{opUser.id},
      opTime = #{opTime},
      opIp = #{opIp},
      function = #{function},
      params = #{params}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    <include refid="base_sql"/>
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <include refid="base_sql"/>
  </select>

  <select id="queryCount" resultType="int">
    SELECT count(s.id) from systemlog s
    <include refid="base_where"/>
  </select>

  <select id="queryForList" resultMap="BaseResultMap">
    <include refid="base_sql"/>
    <include refid="base_where"/>
    limit #{start},#{rows}
  </select>

  <sql id="base_sql">
    select s.id, s.opUser_id, s.opTime, s.opIp, s.function, s.params,
    e.id e_id, e.username e_username
    from systemlog s
      join employee e
        on s.opUser_id = e.id
  </sql>

  <sql id="base_where">
    <where>
      <if test="beginDate != null">
        and s.opTime &gt;= #{beginDate}
      </if>
      <if test="endDate != null">
        and s.opTime &lt;= #{endDate}
      </if>
    </where>
  </sql>
</mapper>